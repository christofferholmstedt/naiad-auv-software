        -:    0:Source:/home/evr/git/naiad-auv-software/src/lib/math/angles/src/math-angles.adb
        -:    0:Programs:24
        -:    1:
        -:    2:
        -:    3:package body Math.Angles is
        -:    4:
       12:    5:   function fGet_Angle_Degrees_In_Range
        -:    6:     (fAngle : in float;
        -:    7:      fRangeFromExclusive : in float)
        -:    8:      return float
        -:    9:   is
        -:   10:      fNewAngle : float;
        -:   11:   begin
       12:   12:      fNewAngle := fAngle;
       16:   13:      while fNewAngle <= fRangeFromExclusive loop
        4:   14:         fNewAngle := fNewAngle + 360.0;
        4:   15:      end loop;
      500:   16:      while fNewAngle > (fRangeFromExclusive + 360.0) loop
      488:   17:         fNewAngle := fNewAngle - 360.0;
      488:   18:      end loop;
       12:   19:      return fNewAngle;
        -:   20:   end fGet_Angle_Degrees_In_Range;
        -:   21:
        8:   22:   function fGet_Angle_Radians_In_Range
        -:   23:     (fAngle : in float;
        -:   24:      fRangeFromExclusive : in float)
        -:   25:      return float
        -:   26:   is
        -:   27:      fNewAngle : float;
        -:   28:   begin
        8:   29:      fNewAngle := fAngle;
       40:   30:      while fNewAngle <= fRangeFromExclusive loop
       32:   31:         fNewAngle := fNewAngle + (2.0 * Ada.Numerics.Pi);
       32:   32:      end loop;
    27676:   33:      while fNewAngle > (fRangeFromExclusive + (2.0 * Ada.Numerics.Pi)) loop
    27668:   34:         fNewAngle := fNewAngle - (2.0 * Ada.Numerics.Pi);
    27668:   35:      end loop;
        8:   36:      return fNewAngle;
        -:   37:   end fGet_Angle_Radians_In_Range;
        -:   38:
        -:   39:
   160000:   40:   function fRadians_To_Degrees (fAngle : in float) return float is
        -:   41:   begin
   160000:   42:      return (fAngle * 180.0) / Ada.Numerics.Pi;
        -:   43:   end fRadians_To_Degrees;
        -:   44:
        -:   45:
   160000:   46:   function fDegrees_To_Radians (fAngle : in float) return float is
        -:   47:   begin
   160000:   48:      return (fAngle * Ada.Numerics.Pi) / 180.0;
        -:   49:   end fDegrees_To_Radians;
        -:   50:
        4:   51:   function fTAngle_To_FAngle (tfAngle : in TAngle) return float is
        -:   52:   begin
        4:   53:      return float(tfAngle);
        -:   54:   end fTAngle_To_FAngle;
        -:   55:
        4:   56:   function tfFAngle_To_TAngle (fAngle : in float) return TAngle is
        -:   57:   begin
        4:   58:      return TAngle(Math.Angles.fGet_Angle_Degrees_In_Range(fAngle              => fAngle,
        -:   59:                                                     fRangeFromExclusive => -180.0));
        -:   60:   end tfFAngle_To_TAngle;
        -:   61:
        -:   62:
        -:   63:
        -:   64:end Math.Angles;
