        -:    0:Source:/home/evr/git/naiad-auv-software/src/lib/math/planes/src/math-planes.adb
        -:    0:Programs:21
        -:    1:with Math.Vectors;
        -:    2:with Ada.Numerics;
        -:    3:
        -:    4:package body Math.Planes is
        -:    5:
       14:    6:   function pxCreate (pxNormalVector : in Math.Vectors.pCVector; fDistanceFromOrigin : in float) return pCPlane is
       14:    7:      pxNewPlane : pCPlane;
        -:    8:   begin
       14:    9:      pxNewPlane := new CPlane;
       14:   10:      pxNewPlane.pxNormalVector := pxNormalVector.pxGet_Normalized;
       14:   11:      pxNewPlane.fDistanceFromOrigin := fDistanceFromOrigin;
       14:   12:      return pxNewPlane;
        -:   13:   end pxCreate;
        -:   14:
       12:   15:   function pxGet_Normal_Vector (this : in CPlane) return Math.Vectors.pCVector is
        -:   16:   begin
       12:   17:      return this.pxNormalVector.pxGet_Copy;
        -:   18:   end pxGet_Normal_Vector;
        -:   19:
        -:   20:
        -:   21:
        2:   22:   function fGet_Distance_From_Origin (this : in CPlane) return float is
        -:   23:   begin
        2:   24:      return this.fDistanceFromOrigin;
        -:   25:   end fGet_Distance_From_Origin;
        -:   26:
        2:   27:   function fAngle_Between_In_Degrees (pxLeftOperandPlane : in pCPlane; pxRightOperandPlane : in pCPlane) return float is
        -:   28:      fAngleInRadians : float;
        -:   29:      fAngleInDegrees : float;
        -:   30:   begin
        4:   31:      fAngleInRadians := Math.Vectors.fAngle_Between_In_Radians(pxLeftOperandVector  => pxLeftOperandPlane.pxGet_Normal_Vector,
        2:   32:                                                                pxRightOperandVector => pxRightOperandPlane.pxGet_Normal_Vector);
        2:   33:      fAngleInDegrees :=  fAngleInRadians * (180.0 / Ada.Numerics.Pi);
        2:   34:      return fAngleInDegrees;
        -:   35:   end fAngle_Between_In_Degrees;
        -:   36:
        -:   37:
        2:   38:   function pxGet_Intersection_Vector_Between (pxLeftOperandPlane : in pCPlane; pxRightOperandPlane : in pCPlane) return Math.Vectors.pCVector is
        2:   39:      pxIntersectionVector : Math.Vectors.pCVector;
        -:   40:   begin
        -:   41:
        4:   42:      pxIntersectionVector := Math.Vectors.pxCross_Product(pxLeftOperandVector  => pxLeftOperandPlane.pxGet_Normal_Vector,
        2:   43:                                                           pxRightOperandVector => pxRightOperandPlane.pxGet_Normal_Vector);
        2:   44:      return pxIntersectionVector.pxGet_Normalized;
        -:   45:   end pxGet_Intersection_Vector_Between;
        -:   46:
        -:   47:
        -:   48:
        -:   49:
        -:   50:end Math.Planes;
